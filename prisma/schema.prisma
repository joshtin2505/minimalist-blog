// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  lastname  String
  username  String   @unique
  password  String?
  emailVerified DateTime?
  image         String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  categories Categories[]
  posts Posts[]
}

model Categories {
  id        String   @id @default(uuid())
  name      String
  imagesrc  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy User @relation(fields: [createdById], references: [id])
  createdById String
  posts Posts[]
}


model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}

model Posts {
  id                 String       @id @default(cuid())
  title              String
  content            String
  html               String    @db.Text
  markdown           String    @db.Text
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  publishedAt        DateTime?
  readingTimeMinutes Int
  status              PostStatus
  author             User      @relation(fields: [authorId], references: [id])
  authorId           String
  category           Categories @relation(fields: [categoryId], references: [id])
  categoryId         String
  tags               String[]

  @@map("posts")
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
  DELETED
  PROGRAMMED
}